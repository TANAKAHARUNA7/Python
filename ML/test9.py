import numpy as np

# numpyは、Pythonで数値計算を行うためのライブラリです。
# 大規模な配列や行列の操作に特化しており、高速な演算が可能です。

# zeros()関数：指定した形状（shape）の配列を作成し、すべての要素を0で初期化します。
bar = np.zeros((2))           # 要素数2の1次元配列（ベクトル）を作成
foo = np.zeros((3, 2))        # 3行2列の2次元配列（行列）を作成
pos = np.zeros((2, 3, 2))     # 2個の3行2列を持つ3次元配列（テンソル）を作成

# shapeとは？
# shapeは配列の「次元ごとのサイズ」を示す属性で、タプルとして返されます。
# 各次元がいくつの要素を持っているかを表します。

# 例:
# (2,) → 1次元配列で、2つの要素を持つ → ベクトル（vector）
# (3, 2) → 2次元配列で、3行2列を持つ → 行列（matrix）
# (2, 3, 2) → 3次元配列で、2つの3行2列の配列 → テンソル（tensor）

print(f"bar.shape: {bar.shape}")  # (2,)
print(f"foo.shape: {foo.shape}")  # (3, 2)
print(f"pos.shape: {pos.shape}")  # (2, 3, 2)
print()

print(bar)  # [0. 0.] → 1次元配列（ベクトル）
print()
print(foo)  # [[0. 0.] [0. 0.] [0. 0.]] → 2次元配列（行列）
print()
print(pos)  # [[[0. 0.] [0. 0.] [0. 0.]] [[0. 0.] [0. 0.] [0. 0.]]] → 3次元配列（テンソル）
